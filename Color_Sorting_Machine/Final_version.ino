#include <Wire.h>
#include "Adafruit_TCS34725.h"
#include <Servo.h>

Adafruit_TCS34725 tcs = Adafruit_TCS34725(TCS34725_INTEGRATIONTIME_614MS, TCS34725_GAIN_1X);
Servo servo1;  // ‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á
Servo servo2;  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏¢‡∏Å‡∏™‡∏µ

bool systemEnabled = false;

// ‡∏≠‡∏á‡∏®‡∏≤‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏™‡∏µ: ‡πÅ‡∏î‡∏á ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á ‡∏™‡πâ‡∏° ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•
int slotAngles[5] = {165, 125, 90, 45, 0};

int noColorCount = 0;  // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏™‡∏µ

void setup() {
  Serial.begin(9600);
  if (!tcs.begin()) {
    Serial.println("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏™‡∏µ");
    while (1);
  }

  servo1.attach(8);
  servo2.attach(9);

  servo1.write(174);
  servo2.write(90);

  Serial.println("‡∏û‡∏¥‡∏°‡∏û‡πå 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏õ | ‡∏û‡∏¥‡∏°‡∏û‡πå 0 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î");
}

void loop() {
  // ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö
  if (Serial.available()) {
    char cmd = Serial.read();
    if (cmd == '1') {
      Serial.println("‚ñ∂ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ß‡∏ô‡∏•‡∏π‡∏õ)");
      systemEnabled = true;
    } else if (cmd == '0') {
      Serial.println("‚èπ ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
      systemEnabled = false;
      servo1.write(174);
      servo2.write(90);
    }
  }

  if (!systemEnabled) return;

  // STEP 1: Servo1 ‡πÑ‡∏õ‡∏£‡∏±‡∏ö Skittle
  servo1.write(174);
  delay(2000);

  // STEP 2: ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏µ
  servo1.write(80);
  delay(1000);
  servo1.write(86);
  delay(800);

  // STEP 3: ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡∏ã‡πâ‡∏≥ 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  String lastColor = "";
  int sameCount = 0;
  noColorCount = 0;  // Reset ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ

  while (systemEnabled && sameCount < 3) {
    uint16_t r, g, b, c;
    tcs.getRawData(&r, &g, &b, &c);

    String currentColor = detectColor(r, g, b);

    Serial.print("R: "); Serial.print(r);
    Serial.print(" G: "); Serial.print(g);
    Serial.print(" B: "); Serial.print(b);
    Serial.print(" ‚Üí ‡∏™‡∏µ: "); Serial.println(currentColor);

    if (currentColor == lastColor && currentColor != "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö") {
      sameCount++;
      Serial.print("‚úÖ ‡∏™‡∏µ "); Serial.print(currentColor);
      Serial.print(" ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ("); Serial.print(sameCount); Serial.println("/3)");
      noColorCount = 0;
    } else if (currentColor == "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö") {
      noColorCount++;
      Serial.print("‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏™‡∏µ (‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà "); Serial.print(noColorCount); Serial.println(")");

      if (noColorCount >= 10) {
        Serial.println("‚ö† ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏™‡∏µ 10 ‡∏£‡∏≠‡∏ö ‚Üí Servo1 ‡πÑ‡∏õ 0¬∞, ‡∏£‡∏≠ 2 ‡∏ß‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö 86¬∞");

        servo1.write(0);
        delay(2000);
        servo1.write(86);

        noColorCount = 0;
        sameCount = 0;
        lastColor = "";
        break;  // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å loop ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏µ
      }

    } else {
      sameCount = 1;
      lastColor = currentColor;
      noColorCount = 0;
      Serial.println("üîÅ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà");
    }

    delay(300);
  }

  if (!systemEnabled) return;

  // STEP 4: ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô Servo2 ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏µ
  int index = getColorIndex(lastColor);
  if (index == -1) {
    Serial.println("‚ö† ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏µ‡πÑ‡∏î‡πâ");
    servo2.write(90);
  } else {
    Serial.print("üì¶ ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô Servo2 ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á: "); Serial.println(slotAngles[index]);
    servo2.write(slotAngles[index]);
  }

  delay(700);

  // STEP 5: Servo1 ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á 0¬∞
  servo1.write(0);
  Serial.println("üåÄ ‡∏õ‡∏•‡πà‡∏≠‡∏¢ Skittle");

  delay(1000);

  // STEP 6: Reset ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  servo2.write(90);
  delay(500);
}

// ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ =====
String detectColor(uint16_t r, uint16_t g, uint16_t b) {
  // RED
  if (r >= 1656 && r <= 2256 && g >= 375 && g <= 975 && b >= 206 && b <= 806) {
    return "‡πÅ‡∏î‡∏á";
  }

  // BROWN
  if (r >= 897 && r <= 1497 && g >= 433 && g <= 1033 && b >= 179 && b <= 779) {
    return "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•";
  }

  // ORANGE
  if (r >= 2761 && r <= 3361 && g >= 1296 && g <= 1896 && b >= 498 && b <= 1098) {
    return "‡∏™‡πâ‡∏°";
  }

  // GREEN
  if (r >= 2287 && r <= 2887 && g >= 2420 && g <= 3020 && b >= 1112 && b <= 1712) {
    return "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß";
  }

  // YELLOW
  if (r >= 3059 && r <= 3659 && g >= 2349 && g <= 2949 && b >= 1006 && b <= 1606) {
    return "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á";
  }

  return "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö";
}

int getColorIndex(String color) {
  if (color == "‡πÅ‡∏î‡∏á") return 0;
  if (color == "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß") return 1;
  if (color == "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á") return 2;
  if (color == "‡∏™‡πâ‡∏°") return 3;
  if (color == "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•") return 4;
  return -1;
}
