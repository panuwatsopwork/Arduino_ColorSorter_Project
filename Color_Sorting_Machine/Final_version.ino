/* Connect SCL    to analog 5
   Connect SDA    to analog 4
   Connect VDD    to 3.3V DC
   Connect GROUND to common ground */

#include <Wire.h>
#include "Adafruit_TCS34725.h"
#include <Servo.h>

Adafruit_TCS34725 tcs = Adafruit_TCS34725(TCS34725_INTEGRATIONTIME_614MS, TCS34725_GAIN_1X);
Servo servo1;  // ‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á
Servo servo2;  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏¢‡∏Å‡∏™‡∏µ

bool systemEnabled = false;

// ‡∏≠‡∏á‡∏®‡∏≤‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏™‡∏µ: ‡πÅ‡∏î‡∏á ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á ‡∏™‡πâ‡∏° ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•
int slotAngles[5] = {165, 125, 90, 45, 0};

void setup() {
  Serial.begin(9600);
  if (!tcs.begin()) {
    Serial.println("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏™‡∏µ");
    while (1);
  }

  servo1.attach(8);
  servo2.attach(9);

  servo1.write(174);
  servo2.write(90);

  Serial.println("‡∏û‡∏¥‡∏°‡∏û‡πå 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏õ | ‡∏û‡∏¥‡∏°‡∏û‡πå 0 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î");
}

void loop() {
  // ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö
  if (Serial.available()) {
    char cmd = Serial.read();
    if (cmd == '1') {
      Serial.println("‚ñ∂ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ß‡∏ô‡∏•‡∏π‡∏õ)");
      systemEnabled = true;
    } else if (cmd == '0') {
      Serial.println("‚èπ ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
      systemEnabled = false;
      servo1.write(174);
      servo2.write(90);
    }
  }

  if (!systemEnabled) return;

  // STEP 1: Servo1 ‡πÑ‡∏õ‡∏£‡∏±‡∏ö Skittle
  servo1.write(174);
  delay(2000);

  // STEP 2: ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏µ
  servo1.write(80);
  delay(1000);
    servo1.write(86);
  delay(800);


  // STEP 3: ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡∏ã‡πâ‡∏≥ 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  String lastColor = "";
  int sameCount = 0;

  while (systemEnabled && sameCount < 3) {
    uint16_t r, g, b, c;
    tcs.getRawData(&r, &g, &b, &c);

    String currentColor = detectColor(r, g, b);

    Serial.print("R: "); Serial.print(r);
    Serial.print(" G: "); Serial.print(g);
    Serial.print(" B: "); Serial.print(b);
    Serial.print(" ‚Üí ‡∏™‡∏µ: "); Serial.println(currentColor);

    if (currentColor == lastColor && currentColor != "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö") {
      sameCount++;
      Serial.print("‚úÖ ‡∏™‡∏µ "); Serial.print(currentColor);
      Serial.print(" ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ("); Serial.print(sameCount); Serial.println("/3)");
    } else {
      sameCount = 1;
      lastColor = currentColor;
      Serial.println("üîÅ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà");
    }

    delay(300);
  }

  if (!systemEnabled) return;

  // STEP 4: ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô Servo2 ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏µ
  int index = getColorIndex(lastColor);
  if (index == -1) {
    Serial.println("‚ö† ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏µ‡πÑ‡∏î‡πâ");
    servo2.write(90);
  } else {
    Serial.print("üì¶ ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô Servo2 ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á: "); Serial.println(slotAngles[index]);
    servo2.write(slotAngles[index]);
  }

  delay(700);

  // STEP 5: Servo1 ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á 0¬∞
  servo1.write(0);
  Serial.println("üåÄ ‡∏õ‡∏•‡πà‡∏≠‡∏¢ Skittle");

  delay(1000);

  // STEP 6: Reset ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  servo2.write(90);
  delay(500);
}

// ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ =====
String detectColor(uint16_t r, uint16_t g, uint16_t b) {
  // ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á: R ‡πÅ‡∏•‡∏∞ G ‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å, B ‡∏ï‡πà‡∏≥
  if (r > 7000 && g > 5000 && b < 3000) return "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á";

  // ‡∏™‡πâ‡∏°: R ‡∏™‡∏π‡∏á, G ‡∏Å‡∏•‡∏≤‡∏á, B ‡∏ï‡πà‡∏≥
  if (r > 6500 && g > 2000 && g < 4000 && b < 2000) return "‡∏™‡πâ‡∏°";

  // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß: G ‡πÄ‡∏î‡πà‡∏ô‡∏™‡∏∏‡∏î, R ‡πÅ‡∏•‡∏∞ B ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤
  if (g > 2800 && g > r + 800 && g > b + 800) return "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß";

  // ‡πÅ‡∏î‡∏á: R ‡πÄ‡∏î‡πà‡∏ô, G/B ‡∏ï‡πà‡∏≥
  if (r > 2000 && g < 1500 && b < 1500) return "‡πÅ‡∏î‡∏á";

  // ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: R/G/B ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡πà‡∏≥
  if (r < 1500 && g < 1000 && b < 800) return "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•";

  return "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö";
}



int getColorIndex(String color) {
  if (color == "‡πÅ‡∏î‡∏á") return 0;
  if (color == "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß") return 1;
  if (color == "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á") return 2;
  if (color == "‡∏™‡πâ‡∏°") return 3;
  if (color == "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•") return 4;
  return -1;
}
